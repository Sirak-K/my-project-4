JS Functions:
└─ FUNC - 1: EDIT-PENCIL - BIO
└─ initializeBioEditing
└─ RELATED ATTRIBUTE-1-A: class="edit-pencil-bio"

└─ FUNC - 2: PROFILE DETAIL - CLOSE DROPDOWN
└─ closeOpenDropdownAndDisableBio
└─ <no specific HTML attribute>

└─ FUNC - 3: PROFILE DETAILS
└─ updateProfileField
└─ RELATED ATTRIBUTE-3-A: data-field-name

└─ FUNC - 4: PROFILE DETAILS - SAVE DETAIL
└─ sendUpdatedValueToServer
└─ RELATED ATTRIBUTE-4-A: data-user-id

└─ FUNC - 5: POST - LIKE
└─ likePost
├─ RELATED ATTRIBUTE-5-A: class="like-btn"
└─ RELATED ATTRIBUTE-5-B: data-post-id="{{ post.id }}"

└─ FUNC - 6: POST REMOVAL - CONFIRMATION WINDOW
└─ confirmRemovePost
└─ <no specific HTML attribute>

└─ FUNC - 7: POST REMOVAL - CONFIRMATION BUTTON
└─ RemovePostConfirmation
└─ RELATED ATTRIBUTE-7-A: class="remove-post-btn"

└─ FUNC - 8: TOGGLE COMMENTS VISIBILITY
└─ toggleComments
├─ RELATED ATTRIBUTE-8-A: class="btn-toggle-comment"
└─ RELATED ATTRIBUTE-8-B: class="post-comment-container"



COMM-FIX-1: Create the views:
a. post_comment - handles posting a comment.
b. post_comment_list - displays the list of comments on a post with pagination.

COMM-FIX-2: Associate comments with posts:
a. Comments should be displayed under each post.

COMM-FIX-3: Implement toggle-visibility function for comments:
a. Speech bubble icon to reveal/hide the list of comments for a post.

COMM-FIX-4: Display post metadata:
a. Number of comments with a speech-bubble icon.
b. Number of likes with a thumbs-up icon.



COMM-FIX-5: Create an input field for comments that is always attached to posts
Create it in the most optimal place: 1) post_details.html or 2) post_comment.html


COMM-FIX-x: Use a consistent naming convention for HTML classes and IDs.

COMM-FIX-9: Create a visual diagram illustrating the commenting functionality across the various project files:
a. models.py - Comment model.
b. views.py - the two views for handling comments.
c. urls.py - related routing, etc.



The script.js file contains a self-invoking function that sets up the interactivity and functionality
 for the Social Networking Project.
This function consists of several smaller utility functions and event handlers. 
Here's a brief overview of what each function does:

getCookie: This utility function retrieves a cookie value given its name.
postComment: Posts a comment on a post and updates the DOM with the new comment.
initializeCropper: Initializes the profile image cropper using the Cropper.js library and adds event listeners to handle cropping and saving the cropped image.
likePost: Adds event listeners to like buttons for posts, and sends a request to the server to update the like count.
toggleCommentsSection: Toggles the display of the comments section for a post.
initializeCommentInput: Initializes the comment input fields and adds event listeners to handle comment submission.
updateProfileField: Updates the user's profile field with a new value and sends the updated value to the server.
sendUpdatedValueToServer: Sends the updated profile field value to the server.
closeOpenDropdownAndDisableBio: Closes any open dropdown menus and disables editing for the bio field.
initializeBioEditing: Initializes the bio editing functionality by adding event listeners to the edit pencil icon and the contenteditable bio element.
confirmRemovePost: Displays a confirmation window for removing a post.
RemovePostConfirmation: Adds event listeners to post removal buttons, and asks for user confirmation before removing a post.

